        # input data stream 
        for ii in range(64):
            temp = int(rleconfig.read_addr)
            indatastream.datastream.input_val.next = red_pixels_1[ii]
            if ii == 0:
                yield clock.posedge
            yield clock.posedge

            if ii >= 2:
                if bufferdatabus.rlesymbols.dovalid == True:
                    print("amplitude = %d runlength = %d size = %d" % (
                    	bufferdatabus.rlesymbols.amplitude, bufferdatabus.rlesymbols.runlength, bufferdatabus.rlesymbols.size))
                while (int(rleconfig.read_addr) - temp == 0):
                    yield clock.posedge
                    print("amplitude = %d runlength = %d size = %d" % (
                    	bufferdatabus.rlesymbols.amplitude, bufferdatabus.rlesymbols.runlength, bufferdatabus.rlesymbols.size))

        yield clock.posedge
        if bufferdatabus.rlesymbols.dovalid == True:
            print(
            	"amplitude = %d runlength = %d size = %d" % (
            		bufferdatabus.rlesymbols.amplitude, bufferdatabus.rlesymbols.runlength, bufferdatabus.rlesymbols.size))

        yield clock.posedge
        if bufferdatabus.rlesymbols.dovalid == True:
            print("amplitude = %d runlength = %d size = %d" % (
            	bufferdatabus.rlesymbols.amplitude, bufferdatabus.rlesymbols.runlength, bufferdatabus.rlesymbols.size))

        print ("==============1st red pixel block processed===============")